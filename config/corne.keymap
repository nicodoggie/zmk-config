/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NORMAN 0
#define QWERTY 1
#define NAV 2
#define NUM 3
#define LFUNC 4


/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        }; 
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
// -------------------------------------------------------------------------------------
// | GRAVE |  Q  |  W  |  D   |  F  |  K  |  |  J   |      U   |  R  |  L  |  ;  | ESC  |
// | CTRL  |  A  |  S  |  E   |  T  |  G  |  |  Y   |      N   |  I  |  O  |  H  |  '   |
// | LSHFT |  Z  |  X  |  C   |  V  |  B  |  |  P   |      M   |  ,  |  .  |  /  |  []  |
//                     | ALT  |     |     |  | BSPC | NUM/MENU | GUI |
            bindings = <
    &kp GRAVE &kp Q &kp W &kp D &kp F &kp K   &kp J &kp U    &kp R     &kp L   &kp SEMI &kp ESC
    &kp LCTRL &kp A &kp S &kp E &kp T &kp G   &kp Y &kp N    &kp I     &kp O   &kp H    &kp SQT
    &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp P &kp M    &kp COMMA &kp DOT &kp FSLH &td0
            &kp LALT &lt LFUNC SPACE &lt NAV  RET   &kp BSPC &lt NUM K_APP &kp LGUI
            >;
        };
        qwerty_layer {
// -------------------------------------------------------------------------------------
// | GRAVE |  Q  |  W  |  E   |  R  |  T  |  |  Y   |  U   |  I  |  O  |  P  | ESC  |
// | CTRL  |  A  |  S  |  D   |  F  |  G  |  |  H   |  J   |  K  |  L  |  ;  |  '   |
// | LSHFT |  Z  |  X  |  C   |  V  |  B  |  |  N   |  M   |  ,  |  .  |  /  |  []  |
//                     | ALT |     |     |  | BSPC | NUM/MENU | GUI |
            bindings = <
    &kp GRAVE &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp ESC
    &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
    &kp LSHFT  &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &td0
            &kp LALT &lt LFUNC SPACE &lt NAV RET   &kp BSPC &lt NUM K_APP &kp LGUI
            >;
        };
        nav_layer {
// --------------------------------------------------------------------------------------
// | ALT TAB | HOME  | UP  |  END  | PGUP |      |   | BT1 | BT2 | BT3 | BT4 | BT5 |     |
// |         | LEFT  | DWN | RIGHT | PGDN |      |   | LFT | DWN | UP  |  -  |  =  |     |
// |         | V LFT |     | V RGT |      |      |   | INS |     |     |     |     |     |
//                            |    |      |      |   | DEL |     | GUI |
            bindings = <
    &kp LA(TAB) &kp HOME &kp UP   &kp END   &kp PG_UP &none       &kp LG(PG_UP)     &kp LG(LS(LEFT))  &kp LG(PG_DN)     &kp MINUS &trans &to 0
    &trans      &kp LEFT &kp DOWN &kp RIGHT &kp PG_DN &none       &kp LS(LG(PG_UP)) &kp LG(LS(RIGHT)) &kp LS(LG(PG_DN)) &trans    &to 3  &to 1
    &trans      &trans   &trans   &trans    &trans    &trans      &kp INS           &trans            &trans            &trans    &to 4  &to 2
                                  &trans    &trans    &trans      &kp DEL           &trans            &trans
            >;
        };
        num_layer {

// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6   |  7  |  8  |  9  |  0  | BKSP |
// | CTRL |     |     |     |     |     |   |  -   |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   | BOOT |  +  |  {  |  }  | "|" |  ~   |
//                    |     |     |     |   |      |     | ALT |
            bindings = <
    &kp TAB   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5     &kp N6    &kp N7    &kp N8   &kp N9   &kp N0   &to 0
    &kp LCTRL &none  &none  &none  &none  &none      &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH &to 1
    &kp LSHFT &none  &none  &none  &none  &none      &kp INS   &kp PLUS  &kp LBRC &kp RBRC &kp PIPE &to 2
                            &trans &trans &trans     &kp DEL   &trans    &trans
            >;
        };
        func_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  F1  |  F2  |  F3  |  F4  |  F5   |   |  F6  |  F7  |  F8  |  F9  |  F10  |  F11  |
// | CTRL |      |      |      |      | PSCRN |   | F12  |   =  |  [   |  ]   |   \   |   `   |
// | SHFT |      |      |      |      |       |   | BT1  |  BT2 |  BT3 |  BT4 |  BT5  | BTCLR |
//                      |      |      |       |   |      |      |      |
            bindings = <
    &kp TAB   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5       &kp F6       &kp F7       &kp F8       &kp F9       &kp F10      &to 0
    &kp LCTRL &trans &trans &trans &trans &kp PSCRN    &kp F11      &kp F12      &kp LBKT     &kp RBKT     &to 2        &to 1
    &kp LSHFT &trans &trans &trans &trans &kp RGUI     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
                            &trans &trans &trans       &trans       &trans   &trans
            >;
        };
    };
};